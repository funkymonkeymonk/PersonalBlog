{"version":3,"sources":["webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js","webpack:///./src/components/GameplaysTitle.tsx","webpack:///./src/pages/gameplays.tsx","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardDescription.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardHeader.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardMeta.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardGroup.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/Card.js"],"names":["GridColumn","props","children","className","computer","color","floated","largeScreen","mobile","only","stretched","tablet","textAlign","verticalAlign","widescreen","width","classes","rest","getUnhandledProps","ElementType","getElementType","createElement","handledProps","create","GridRow","centered","columns","divided","reversed","Grid","celled","container","doubling","inverted","padded","relaxed","stackable","Column","Row","Segment","vertical","Header","as","Icon","name","Content","Subheader","withLayout","plays","data","allGoogleGameplaysSheet","edges","Blogmarks","Container","map","cardHeader","node","id","whatGame","date","outcome","otherData","scenario","Card","key","fluid","meta","header","description","extra","GameplaysTitle","style","justifyContent","maxWidth","module","exports","TypeError","__esModule","iter","Symbol","iterator","Array","from","arrayLikeToArray","arr","isArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","CardDescription","content","isNil","CardHeader","CardMeta","CardContent","val","autoGenerateKey","CardGroup","items","itemsPerRow","itemsJSX","item","join","_Component","_getPrototypeOf2","_this","this","_len","arguments","length","args","_key","call","apply","concat","e","onClick","value","_this$props","href","image","link","raised","handleClick","Image","defaultProps","ui","wrapped"],"mappings":"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","file":"component---src-pages-gameplays-tsx-c2ed065b18d3a5525160.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nexport default GridRow;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nexport default Grid;","import * as React from \"react\";\nimport { Header, Segment, Icon } from \"semantic-ui-react\";\n\nexport default () => {\n  return (\n    <Segment vertical>\n      <Header as=\"h2\">\n        <Icon name=\"chess pawn\" />\n        <Header.Content>\n          Gameplays\n          <Header.Subheader>\n            I really enjoy games of all types. Here is some of my recent game experiences.\n          </Header.Subheader>\n        </Header.Content>\n      </Header>\n    </Segment>\n  );\n};\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { Grid, Card, Container, Segment } from \"semantic-ui-react\";\nimport { MarkdownRemarkConnection } from \"../graphql-types\";\nimport {withLayout, LayoutProps} from \"../components/Layout\";\nimport GameplaysTitle from \"../components/GameplaysTitle\";\n\ninterface GameplaysProps extends LayoutProps {\n  data: {\n    tags: MarkdownRemarkConnection;\n    posts: MarkdownRemarkConnection;\n  };\n  pageContext: {\n    tag?: string; // only set into `templates/tags-pages.tsx`\n  };\n}\n\nconst GameplaysPage = (props: GameplaysProps) => {\n  // const tags = props.data.tags.group;\n  const plays = props.data.allGoogleGameplaysSheet.edges;\n  // const { pathname } = props.location;\n  // const pageCount = Math.ceil(props.data.posts.totalCount / 10);\n\n  const Blogmarks = (\n    <Container>\n      {plays.map(({ node }) => {\n        const { id, whatGame, date, outcome, otherData, scenario } = node;\n        let cardHeader: string;\n        if (scenario) {\n          cardHeader = whatGame + \" - \" + scenario;\n        } else {\n          cardHeader = whatGame;\n        }\n\n        return (\n          <Card key={id}\n                fluid\n            // image={cover}\n                meta={outcome}\n                header={cardHeader}\n                description={otherData}\n                extra={date}\n          />\n        );\n      })}\n    </Container>\n  );\n\n  return (\n    <Container>\n      {/* Title */}\n      <GameplaysTitle />\n\n      {/* Content */}\n      <Segment vertical>\n        <Grid padded style={{ justifyContent: \"space-around\" }}>\n          <div style={{ maxWidth: 600 }}>\n            {Blogmarks}\n            {/* <Segment vertical textAlign=\"center\">\n              <BlogPagination Link={Link} pathname={pathname} pageCount={pageCount} />\n            </Segment> */}\n          </div>\n          {/* <div>\n            <TagsCard Link={Link} tags={tags} tag={props.pageContext.tag} />\n          </div> */}\n        </Grid>\n      </Segment>\n    </Container>\n  );\n};\n\nexport default withLayout(GameplaysPage);\n\nexport const pageQuery = graphql`\nquery PageGameplays {\n  allGoogleGameplaysSheet {\n    totalCount,\n    edges {\n      node {\n        id, whatGame, date, timestamp, outcome, otherData, scenario\n      }\n    }\n  }\n}\n`;\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a description with one or more paragraphs.\n */\n\nfunction CardDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'description', className);\n  var rest = getUnhandledProps(CardDescription, props);\n  var ElementType = getElementType(CardDescription, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardDescription.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nexport default CardDescription;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a header.\n */\n\nfunction CardHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(CardHeader, props);\n  var ElementType = getElementType(CardHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain content metadata.\n */\n\nfunction CardMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'meta', className);\n  var rest = getUnhandledProps(CardMeta, props);\n  var ElementType = getElementType(CardMeta, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nexport default CardMeta;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\nimport CardDescription from './CardDescription';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card can contain blocks of content or extra content meant to be formatted separately from the main content.\n */\n\nfunction CardContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      textAlign = props.textAlign;\n  var classes = cx(useKeyOnly(extra, 'extra'), useTextAlignProp(textAlign), 'content', className);\n  var rest = getUnhandledProps(CardContent, props);\n  var ElementType = getElementType(CardContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(CardHeader, function (val) {\n    return {\n      content: val\n    };\n  }, header, {\n    autoGenerateKey: false\n  }), createShorthand(CardMeta, function (val) {\n    return {\n      content: val\n    };\n  }, meta, {\n    autoGenerateKey: false\n  }), createShorthand(CardDescription, function (val) {\n    return {\n      content: val\n    };\n  }, description, {\n    autoGenerateKey: false\n  }));\n}\n\nCardContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"textAlign\"];\nexport default CardContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n/**\n * A group of cards.\n */\n\nfunction CardGroup(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  var itemsJSX = _map(items, function (item) {\n    var key = item.key || [item.header, item.description].join('-');\n    return React.createElement(Card, _extends({\n      key: key\n    }, item));\n  });\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\n\nCardGroup.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"content\", \"doubling\", \"items\", \"itemsPerRow\", \"stackable\", \"textAlign\"];\nexport default CardGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport cx from 'classnames';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\nimport Image from '../../elements/Image';\nimport CardContent from './CardContent';\nimport CardDescription from './CardDescription';\nimport CardGroup from './CardGroup';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card displays site content in a manner similar to a playing card.\n */\n\nvar Card = /*#__PURE__*/function (_Component) {\n  _inherits(Card, _Component);\n\n  function Card() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Card)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      var onClick = _this.props.onClick;\n      if (onClick) onClick(e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          centered = _this$props.centered,\n          children = _this$props.children,\n          className = _this$props.className,\n          color = _this$props.color,\n          content = _this$props.content,\n          description = _this$props.description,\n          extra = _this$props.extra,\n          fluid = _this$props.fluid,\n          header = _this$props.header,\n          href = _this$props.href,\n          image = _this$props.image,\n          link = _this$props.link,\n          meta = _this$props.meta,\n          onClick = _this$props.onClick,\n          raised = _this$props.raised;\n      var classes = cx('ui', color, useKeyOnly(centered, 'centered'), useKeyOnly(fluid, 'fluid'), useKeyOnly(link, 'link'), useKeyOnly(raised, 'raised'), 'card', className);\n      var rest = getUnhandledProps(Card, this.props);\n      var ElementType = getElementType(Card, this.props, function () {\n        if (onClick) return 'a';\n      });\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), children);\n      }\n\n      if (!childrenUtils.isNil(content)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), content);\n      }\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), Image.create(image, {\n        autoGenerateKey: false,\n        defaultProps: {\n          ui: false,\n          wrapped: true\n        }\n      }), (description || header || meta) && React.createElement(CardContent, {\n        description: description,\n        header: header,\n        meta: meta\n      }), extra && React.createElement(CardContent, {\n        extra: true\n      }, extra));\n    }\n  }]);\n\n  return Card;\n}(Component);\n\n_defineProperty(Card, \"Content\", CardContent);\n\n_defineProperty(Card, \"Description\", CardDescription);\n\n_defineProperty(Card, \"Group\", CardGroup);\n\n_defineProperty(Card, \"Header\", CardHeader);\n\n_defineProperty(Card, \"Meta\", CardMeta);\n\n_defineProperty(Card, \"handledProps\", [\"as\", \"centered\", \"children\", \"className\", \"color\", \"content\", \"description\", \"extra\", \"fluid\", \"header\", \"href\", \"image\", \"link\", \"meta\", \"onClick\", \"raised\"]);\n\nexport { Card as default };"],"sourceRoot":""}